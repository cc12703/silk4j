plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

static def makeCmd() {
    if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        return "mingw32-make"
    } else {
        return "make"
    }
}

task compileCPP() {
    doLast {
        mkdir("${projectDir}/native/cmake-build-debug")
        exec {
            workingDir "${projectDir}/native/cmake-build-debug"
            commandLine "cmake", "-DCMAKE_BUILD_TYPE=Debug", "${projectDir}/native"
            standardOutput = System.out
        }

        exec {
            workingDir "${projectDir}/native/cmake-build-debug"
            commandLine "cmake", "-build", "${projectDir}/native/cmake-build-debug"
            standardOutput = System.out
        }
        exec {
            workingDir "${projectDir}/native/cmake-build-debug"
            commandLine makeCmd(), "-j8"
            standardOutput = System.out
        }
    }

}
build.finalizedBy(compileCPP)

test {
    useJUnitPlatform()
}