# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
#    - name: Create Build Environment
#      # Some projects don't allow in-source building, so create a separate build directory
#      # We'll use this as our working directory for all subsequent commands
#      run: cmake -E make_directory ${{github.workspace}}/build
#
#    - name: Configure CMake
#      # Use a bash shell so we can use the same syntax for environment variable
#      # access regardless of the host operating system
#      shell: bash
#      working-directory: ${{github.workspace}}/build
#      # Note the current convention is to use the -S and -B options here to specify source
#      # and build directories, but this is only available with CMake 3.13 and higher.
#      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
#      run: cmake $GITHUB_WORKSPACE/native -DCMAKE_BUILD_TYPE=Debug
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test
      run: ./gradlew test
